// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.signalfuse.metrics.protobuf {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class SignalFuseProtocolBuffers {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_signalfuse_metrics_protobuf_Datum__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.Datum, global::com.signalfuse.metrics.protobuf.Datum.Builder> internal__static_com_signalfuse_metrics_protobuf_Datum__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_signalfuse_metrics_protobuf_Dimension__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.Dimension, global::com.signalfuse.metrics.protobuf.Dimension.Builder> internal__static_com_signalfuse_metrics_protobuf_Dimension__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_signalfuse_metrics_protobuf_DataPoint__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.DataPoint, global::com.signalfuse.metrics.protobuf.DataPoint.Builder> internal__static_com_signalfuse_metrics_protobuf_DataPoint__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.DataPointUploadMessage, global::com.signalfuse.metrics.protobuf.DataPointUploadMessage.Builder> internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_signalfuse_metrics_protobuf_PointValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.PointValue, global::com.signalfuse.metrics.protobuf.PointValue.Builder> internal__static_com_signalfuse_metrics_protobuf_PointValue__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static SignalFuseProtocolBuffers() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiJzaWduYWxfZnVzZV9wcm90b2NvbF9idWZmZXJzLnByb3RvEh9jb20uc2ln" + 
          "bmFsZnVzZS5tZXRyaWNzLnByb3RvYnVmIkAKBURhdHVtEhAKCHN0clZhbHVl" + 
          "GAEgASgJEhMKC2RvdWJsZVZhbHVlGAIgASgBEhAKCGludFZhbHVlGAMgASgD" + 
          "IicKCURpbWVuc2lvbhILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAki9gEK" + 
          "CURhdGFQb2ludBIOCgZzb3VyY2UYASABKAkSDgoGbWV0cmljGAIgASgJEhEK" + 
          "CXRpbWVzdGFtcBgDIAEoAxI1CgV2YWx1ZRgEIAEoCzImLmNvbS5zaWduYWxm" + 
          "dXNlLm1ldHJpY3MucHJvdG9idWYuRGF0dW0SPwoKbWV0cmljVHlwZRgFIAEo" + 
          "DjIrLmNvbS5zaWduYWxmdXNlLm1ldHJpY3MucHJvdG9idWYuTWV0cmljVHlw" + 
          "ZRI+CgpkaW1lbnNpb25zGAYgAygLMiouY29tLnNpZ25hbGZ1c2UubWV0cmlj" + 
          "cy5wcm90b2J1Zi5EaW1lbnNpb24iWAoWRGF0YVBvaW50VXBsb2FkTWVzc2Fn" + 
          "ZRI+CgpkYXRhcG9pbnRzGAEgAygLMiouY29tLnNpZ25hbGZ1c2UubWV0cmlj" + 
          "cy5wcm90b2J1Zi5EYXRhUG9pbnQiVgoKUG9pbnRWYWx1ZRIRCgl0aW1lc3Rh" + 
          "bXAYAyABKAMSNQoFdmFsdWUYBCABKAsyJi5jb20uc2lnbmFsZnVzZS5tZXRy" + 
          "aWNzLnByb3RvYnVmLkRhdHVtKkYKCk1ldHJpY1R5cGUSCQoFR0FVR0UQABIL" + 
          "CgdDT1VOVEVSEAESCAoERU5VTRACEhYKEkNVTVVMQVRJVkVfQ09VTlRFUhAD");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_signalfuse_metrics_protobuf_Datum__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_signalfuse_metrics_protobuf_Datum__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.Datum, global::com.signalfuse.metrics.protobuf.Datum.Builder>(internal__static_com_signalfuse_metrics_protobuf_Datum__Descriptor,
                new string[] { "StrValue", "DoubleValue", "IntValue", });
        internal__static_com_signalfuse_metrics_protobuf_Dimension__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_signalfuse_metrics_protobuf_Dimension__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.Dimension, global::com.signalfuse.metrics.protobuf.Dimension.Builder>(internal__static_com_signalfuse_metrics_protobuf_Dimension__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_com_signalfuse_metrics_protobuf_DataPoint__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_signalfuse_metrics_protobuf_DataPoint__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.DataPoint, global::com.signalfuse.metrics.protobuf.DataPoint.Builder>(internal__static_com_signalfuse_metrics_protobuf_DataPoint__Descriptor,
                new string[] { "Source", "Metric", "Timestamp", "Value", "MetricType", "Dimensions", });
        internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.DataPointUploadMessage, global::com.signalfuse.metrics.protobuf.DataPointUploadMessage.Builder>(internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__Descriptor,
                new string[] { "Datapoints", });
        internal__static_com_signalfuse_metrics_protobuf_PointValue__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_signalfuse_metrics_protobuf_PointValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.signalfuse.metrics.protobuf.PointValue, global::com.signalfuse.metrics.protobuf.PointValue.Builder>(internal__static_com_signalfuse_metrics_protobuf_PointValue__Descriptor,
                new string[] { "Timestamp", "Value", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum MetricType {
    GAUGE = 0,
    COUNTER = 1,
    ENUM = 2,
    CUMULATIVE_COUNTER = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Datum : pb::GeneratedMessage<Datum, Datum.Builder> {
    private Datum() { }
    private static readonly Datum defaultInstance = new Datum().MakeReadOnly();
    private static readonly string[] _datumFieldNames = new string[] { "doubleValue", "intValue", "strValue" };
    private static readonly uint[] _datumFieldTags = new uint[] { 17, 24, 10 };
    public static Datum DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Datum DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Datum ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_Datum__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Datum, Datum.Builder> InternalFieldAccessors {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_Datum__FieldAccessorTable; }
    }
    
    public const int StrValueFieldNumber = 1;
    private bool hasStrValue;
    private string strValue_ = "";
    public bool HasStrValue {
      get { return hasStrValue; }
    }
    public string StrValue {
      get { return strValue_; }
    }
    
    public const int DoubleValueFieldNumber = 2;
    private bool hasDoubleValue;
    private double doubleValue_;
    public bool HasDoubleValue {
      get { return hasDoubleValue; }
    }
    public double DoubleValue {
      get { return doubleValue_; }
    }
    
    public const int IntValueFieldNumber = 3;
    private bool hasIntValue;
    private long intValue_;
    public bool HasIntValue {
      get { return hasIntValue; }
    }
    public long IntValue {
      get { return intValue_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _datumFieldNames;
      if (hasStrValue) {
        output.WriteString(1, field_names[2], StrValue);
      }
      if (hasDoubleValue) {
        output.WriteDouble(2, field_names[0], DoubleValue);
      }
      if (hasIntValue) {
        output.WriteInt64(3, field_names[1], IntValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStrValue) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StrValue);
        }
        if (hasDoubleValue) {
          size += pb::CodedOutputStream.ComputeDoubleSize(2, DoubleValue);
        }
        if (hasIntValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, IntValue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Datum ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Datum ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Datum ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Datum ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Datum ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Datum ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Datum ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Datum ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Datum ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Datum ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Datum MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Datum prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Datum, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Datum cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Datum result;
      
      private Datum PrepareBuilder() {
        if (resultIsReadOnly) {
          Datum original = result;
          result = new Datum();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Datum MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.signalfuse.metrics.protobuf.Datum.Descriptor; }
      }
      
      public override Datum DefaultInstanceForType {
        get { return global::com.signalfuse.metrics.protobuf.Datum.DefaultInstance; }
      }
      
      public override Datum BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Datum) {
          return MergeFrom((Datum) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Datum other) {
        if (other == global::com.signalfuse.metrics.protobuf.Datum.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStrValue) {
          StrValue = other.StrValue;
        }
        if (other.HasDoubleValue) {
          DoubleValue = other.DoubleValue;
        }
        if (other.HasIntValue) {
          IntValue = other.IntValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_datumFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _datumFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStrValue = input.ReadString(ref result.strValue_);
              break;
            }
            case 17: {
              result.hasDoubleValue = input.ReadDouble(ref result.doubleValue_);
              break;
            }
            case 24: {
              result.hasIntValue = input.ReadInt64(ref result.intValue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStrValue {
        get { return result.hasStrValue; }
      }
      public string StrValue {
        get { return result.StrValue; }
        set { SetStrValue(value); }
      }
      public Builder SetStrValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStrValue = true;
        result.strValue_ = value;
        return this;
      }
      public Builder ClearStrValue() {
        PrepareBuilder();
        result.hasStrValue = false;
        result.strValue_ = "";
        return this;
      }
      
      public bool HasDoubleValue {
        get { return result.hasDoubleValue; }
      }
      public double DoubleValue {
        get { return result.DoubleValue; }
        set { SetDoubleValue(value); }
      }
      public Builder SetDoubleValue(double value) {
        PrepareBuilder();
        result.hasDoubleValue = true;
        result.doubleValue_ = value;
        return this;
      }
      public Builder ClearDoubleValue() {
        PrepareBuilder();
        result.hasDoubleValue = false;
        result.doubleValue_ = 0D;
        return this;
      }
      
      public bool HasIntValue {
        get { return result.hasIntValue; }
      }
      public long IntValue {
        get { return result.IntValue; }
        set { SetIntValue(value); }
      }
      public Builder SetIntValue(long value) {
        PrepareBuilder();
        result.hasIntValue = true;
        result.intValue_ = value;
        return this;
      }
      public Builder ClearIntValue() {
        PrepareBuilder();
        result.hasIntValue = false;
        result.intValue_ = 0L;
        return this;
      }
    }
    static Datum() {
      object.ReferenceEquals(global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Dimension : pb::GeneratedMessage<Dimension, Dimension.Builder> {
    private Dimension() { }
    private static readonly Dimension defaultInstance = new Dimension().MakeReadOnly();
    private static readonly string[] _dimensionFieldNames = new string[] { "key", "value" };
    private static readonly uint[] _dimensionFieldTags = new uint[] { 10, 18 };
    public static Dimension DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Dimension DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Dimension ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_Dimension__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Dimension, Dimension.Builder> InternalFieldAccessors {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_Dimension__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dimensionFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[0], Key);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Key);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Dimension ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Dimension ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Dimension ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Dimension ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Dimension ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Dimension ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Dimension ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Dimension ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Dimension ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Dimension ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Dimension MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Dimension prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Dimension, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Dimension cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Dimension result;
      
      private Dimension PrepareBuilder() {
        if (resultIsReadOnly) {
          Dimension original = result;
          result = new Dimension();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Dimension MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.signalfuse.metrics.protobuf.Dimension.Descriptor; }
      }
      
      public override Dimension DefaultInstanceForType {
        get { return global::com.signalfuse.metrics.protobuf.Dimension.DefaultInstance; }
      }
      
      public override Dimension BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Dimension) {
          return MergeFrom((Dimension) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Dimension other) {
        if (other == global::com.signalfuse.metrics.protobuf.Dimension.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dimensionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dimensionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    static Dimension() {
      object.ReferenceEquals(global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataPoint : pb::GeneratedMessage<DataPoint, DataPoint.Builder> {
    private DataPoint() { }
    private static readonly DataPoint defaultInstance = new DataPoint().MakeReadOnly();
    private static readonly string[] _dataPointFieldNames = new string[] { "dimensions", "metric", "metricType", "source", "timestamp", "value" };
    private static readonly uint[] _dataPointFieldTags = new uint[] { 50, 18, 40, 10, 24, 34 };
    public static DataPoint DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DataPoint DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DataPoint ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_DataPoint__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DataPoint, DataPoint.Builder> InternalFieldAccessors {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_DataPoint__FieldAccessorTable; }
    }
    
    public const int SourceFieldNumber = 1;
    private bool hasSource;
    private string source_ = "";
    public bool HasSource {
      get { return hasSource; }
    }
    public string Source {
      get { return source_; }
    }
    
    public const int MetricFieldNumber = 2;
    private bool hasMetric;
    private string metric_ = "";
    public bool HasMetric {
      get { return hasMetric; }
    }
    public string Metric {
      get { return metric_; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    public const int ValueFieldNumber = 4;
    private bool hasValue;
    private global::com.signalfuse.metrics.protobuf.Datum value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::com.signalfuse.metrics.protobuf.Datum Value {
      get { return value_ ?? global::com.signalfuse.metrics.protobuf.Datum.DefaultInstance; }
    }
    
    public const int MetricTypeFieldNumber = 5;
    private bool hasMetricType;
    private global::com.signalfuse.metrics.protobuf.MetricType metricType_ = global::com.signalfuse.metrics.protobuf.MetricType.GAUGE;
    public bool HasMetricType {
      get { return hasMetricType; }
    }
    public global::com.signalfuse.metrics.protobuf.MetricType MetricType {
      get { return metricType_; }
    }
    
    public const int DimensionsFieldNumber = 6;
    private pbc::PopsicleList<global::com.signalfuse.metrics.protobuf.Dimension> dimensions_ = new pbc::PopsicleList<global::com.signalfuse.metrics.protobuf.Dimension>();
    public scg::IList<global::com.signalfuse.metrics.protobuf.Dimension> DimensionsList {
      get { return dimensions_; }
    }
    public int DimensionsCount {
      get { return dimensions_.Count; }
    }
    public global::com.signalfuse.metrics.protobuf.Dimension GetDimensions(int index) {
      return dimensions_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dataPointFieldNames;
      if (hasSource) {
        output.WriteString(1, field_names[3], Source);
      }
      if (hasMetric) {
        output.WriteString(2, field_names[1], Metric);
      }
      if (hasTimestamp) {
        output.WriteInt64(3, field_names[4], Timestamp);
      }
      if (hasValue) {
        output.WriteMessage(4, field_names[5], Value);
      }
      if (hasMetricType) {
        output.WriteEnum(5, field_names[2], (int) MetricType, MetricType);
      }
      if (dimensions_.Count > 0) {
        output.WriteMessageArray(6, field_names[0], dimensions_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSource) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Source);
        }
        if (hasMetric) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Metric);
        }
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, Timestamp);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Value);
        }
        if (hasMetricType) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) MetricType);
        }
        foreach (global::com.signalfuse.metrics.protobuf.Dimension element in DimensionsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DataPoint ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DataPoint ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DataPoint ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DataPoint ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DataPoint ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DataPoint ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DataPoint ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DataPoint ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DataPoint ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DataPoint ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DataPoint MakeReadOnly() {
      dimensions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DataPoint prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DataPoint, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DataPoint cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DataPoint result;
      
      private DataPoint PrepareBuilder() {
        if (resultIsReadOnly) {
          DataPoint original = result;
          result = new DataPoint();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DataPoint MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.signalfuse.metrics.protobuf.DataPoint.Descriptor; }
      }
      
      public override DataPoint DefaultInstanceForType {
        get { return global::com.signalfuse.metrics.protobuf.DataPoint.DefaultInstance; }
      }
      
      public override DataPoint BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DataPoint) {
          return MergeFrom((DataPoint) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DataPoint other) {
        if (other == global::com.signalfuse.metrics.protobuf.DataPoint.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasMetric) {
          Metric = other.Metric;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        if (other.HasMetricType) {
          MetricType = other.MetricType;
        }
        if (other.dimensions_.Count != 0) {
          result.dimensions_.Add(other.dimensions_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dataPointFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dataPointFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSource = input.ReadString(ref result.source_);
              break;
            }
            case 18: {
              result.hasMetric = input.ReadString(ref result.metric_);
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
            case 34: {
              global::com.signalfuse.metrics.protobuf.Datum.Builder subBuilder = global::com.signalfuse.metrics.protobuf.Datum.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.metricType_, out unknown)) {
                result.hasMetricType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.dimensions_, global::com.signalfuse.metrics.protobuf.Dimension.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public string Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = "";
        return this;
      }
      
      public bool HasMetric {
        get { return result.hasMetric; }
      }
      public string Metric {
        get { return result.Metric; }
        set { SetMetric(value); }
      }
      public Builder SetMetric(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMetric = true;
        result.metric_ = value;
        return this;
      }
      public Builder ClearMetric() {
        PrepareBuilder();
        result.hasMetric = false;
        result.metric_ = "";
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::com.signalfuse.metrics.protobuf.Datum Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::com.signalfuse.metrics.protobuf.Datum value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::com.signalfuse.metrics.protobuf.Datum.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::com.signalfuse.metrics.protobuf.Datum value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::com.signalfuse.metrics.protobuf.Datum.DefaultInstance) {
            result.value_ = global::com.signalfuse.metrics.protobuf.Datum.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
      
      public bool HasMetricType {
       get { return result.hasMetricType; }
      }
      public global::com.signalfuse.metrics.protobuf.MetricType MetricType {
        get { return result.MetricType; }
        set { SetMetricType(value); }
      }
      public Builder SetMetricType(global::com.signalfuse.metrics.protobuf.MetricType value) {
        PrepareBuilder();
        result.hasMetricType = true;
        result.metricType_ = value;
        return this;
      }
      public Builder ClearMetricType() {
        PrepareBuilder();
        result.hasMetricType = false;
        result.metricType_ = global::com.signalfuse.metrics.protobuf.MetricType.GAUGE;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.signalfuse.metrics.protobuf.Dimension> DimensionsList {
        get { return PrepareBuilder().dimensions_; }
      }
      public int DimensionsCount {
        get { return result.DimensionsCount; }
      }
      public global::com.signalfuse.metrics.protobuf.Dimension GetDimensions(int index) {
        return result.GetDimensions(index);
      }
      public Builder SetDimensions(int index, global::com.signalfuse.metrics.protobuf.Dimension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dimensions_[index] = value;
        return this;
      }
      public Builder SetDimensions(int index, global::com.signalfuse.metrics.protobuf.Dimension.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.dimensions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDimensions(global::com.signalfuse.metrics.protobuf.Dimension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dimensions_.Add(value);
        return this;
      }
      public Builder AddDimensions(global::com.signalfuse.metrics.protobuf.Dimension.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.dimensions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDimensions(scg::IEnumerable<global::com.signalfuse.metrics.protobuf.Dimension> values) {
        PrepareBuilder();
        result.dimensions_.Add(values);
        return this;
      }
      public Builder ClearDimensions() {
        PrepareBuilder();
        result.dimensions_.Clear();
        return this;
      }
    }
    static DataPoint() {
      object.ReferenceEquals(global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataPointUploadMessage : pb::GeneratedMessage<DataPointUploadMessage, DataPointUploadMessage.Builder> {
    private DataPointUploadMessage() { }
    private static readonly DataPointUploadMessage defaultInstance = new DataPointUploadMessage().MakeReadOnly();
    private static readonly string[] _dataPointUploadMessageFieldNames = new string[] { "datapoints" };
    private static readonly uint[] _dataPointUploadMessageFieldTags = new uint[] { 10 };
    public static DataPointUploadMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DataPointUploadMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DataPointUploadMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DataPointUploadMessage, DataPointUploadMessage.Builder> InternalFieldAccessors {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_DataPointUploadMessage__FieldAccessorTable; }
    }
    
    public const int DatapointsFieldNumber = 1;
    private pbc::PopsicleList<global::com.signalfuse.metrics.protobuf.DataPoint> datapoints_ = new pbc::PopsicleList<global::com.signalfuse.metrics.protobuf.DataPoint>();
    public scg::IList<global::com.signalfuse.metrics.protobuf.DataPoint> DatapointsList {
      get { return datapoints_; }
    }
    public int DatapointsCount {
      get { return datapoints_.Count; }
    }
    public global::com.signalfuse.metrics.protobuf.DataPoint GetDatapoints(int index) {
      return datapoints_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _dataPointUploadMessageFieldNames;
      if (datapoints_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], datapoints_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::com.signalfuse.metrics.protobuf.DataPoint element in DatapointsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static DataPointUploadMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DataPointUploadMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DataPointUploadMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DataPointUploadMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DataPointUploadMessage MakeReadOnly() {
      datapoints_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DataPointUploadMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DataPointUploadMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DataPointUploadMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DataPointUploadMessage result;
      
      private DataPointUploadMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          DataPointUploadMessage original = result;
          result = new DataPointUploadMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DataPointUploadMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.signalfuse.metrics.protobuf.DataPointUploadMessage.Descriptor; }
      }
      
      public override DataPointUploadMessage DefaultInstanceForType {
        get { return global::com.signalfuse.metrics.protobuf.DataPointUploadMessage.DefaultInstance; }
      }
      
      public override DataPointUploadMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DataPointUploadMessage) {
          return MergeFrom((DataPointUploadMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DataPointUploadMessage other) {
        if (other == global::com.signalfuse.metrics.protobuf.DataPointUploadMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.datapoints_.Count != 0) {
          result.datapoints_.Add(other.datapoints_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dataPointUploadMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dataPointUploadMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.datapoints_, global::com.signalfuse.metrics.protobuf.DataPoint.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.signalfuse.metrics.protobuf.DataPoint> DatapointsList {
        get { return PrepareBuilder().datapoints_; }
      }
      public int DatapointsCount {
        get { return result.DatapointsCount; }
      }
      public global::com.signalfuse.metrics.protobuf.DataPoint GetDatapoints(int index) {
        return result.GetDatapoints(index);
      }
      public Builder SetDatapoints(int index, global::com.signalfuse.metrics.protobuf.DataPoint value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.datapoints_[index] = value;
        return this;
      }
      public Builder SetDatapoints(int index, global::com.signalfuse.metrics.protobuf.DataPoint.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.datapoints_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDatapoints(global::com.signalfuse.metrics.protobuf.DataPoint value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.datapoints_.Add(value);
        return this;
      }
      public Builder AddDatapoints(global::com.signalfuse.metrics.protobuf.DataPoint.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.datapoints_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDatapoints(scg::IEnumerable<global::com.signalfuse.metrics.protobuf.DataPoint> values) {
        PrepareBuilder();
        result.datapoints_.Add(values);
        return this;
      }
      public Builder ClearDatapoints() {
        PrepareBuilder();
        result.datapoints_.Clear();
        return this;
      }
    }
    static DataPointUploadMessage() {
      object.ReferenceEquals(global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PointValue : pb::GeneratedMessage<PointValue, PointValue.Builder> {
    private PointValue() { }
    private static readonly PointValue defaultInstance = new PointValue().MakeReadOnly();
    private static readonly string[] _pointValueFieldNames = new string[] { "timestamp", "value" };
    private static readonly uint[] _pointValueFieldTags = new uint[] { 24, 34 };
    public static PointValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PointValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PointValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_PointValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PointValue, PointValue.Builder> InternalFieldAccessors {
      get { return global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.internal__static_com_signalfuse_metrics_protobuf_PointValue__FieldAccessorTable; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    public const int ValueFieldNumber = 4;
    private bool hasValue;
    private global::com.signalfuse.metrics.protobuf.Datum value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::com.signalfuse.metrics.protobuf.Datum Value {
      get { return value_ ?? global::com.signalfuse.metrics.protobuf.Datum.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pointValueFieldNames;
      if (hasTimestamp) {
        output.WriteInt64(3, field_names[0], Timestamp);
      }
      if (hasValue) {
        output.WriteMessage(4, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, Timestamp);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PointValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PointValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PointValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PointValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PointValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PointValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PointValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PointValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PointValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PointValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PointValue MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PointValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PointValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PointValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PointValue result;
      
      private PointValue PrepareBuilder() {
        if (resultIsReadOnly) {
          PointValue original = result;
          result = new PointValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PointValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.signalfuse.metrics.protobuf.PointValue.Descriptor; }
      }
      
      public override PointValue DefaultInstanceForType {
        get { return global::com.signalfuse.metrics.protobuf.PointValue.DefaultInstance; }
      }
      
      public override PointValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PointValue) {
          return MergeFrom((PointValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PointValue other) {
        if (other == global::com.signalfuse.metrics.protobuf.PointValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pointValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pointValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
            case 34: {
              global::com.signalfuse.metrics.protobuf.Datum.Builder subBuilder = global::com.signalfuse.metrics.protobuf.Datum.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::com.signalfuse.metrics.protobuf.Datum Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::com.signalfuse.metrics.protobuf.Datum value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::com.signalfuse.metrics.protobuf.Datum.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::com.signalfuse.metrics.protobuf.Datum value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::com.signalfuse.metrics.protobuf.Datum.DefaultInstance) {
            result.value_ = global::com.signalfuse.metrics.protobuf.Datum.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static PointValue() {
      object.ReferenceEquals(global::com.signalfuse.metrics.protobuf.SignalFuseProtocolBuffers.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
